<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 2018/4/9 10:53:20 Wen Jun created. -->

<mapper namespace="cn.com.czcb.dao.IFeedbackProblemDao">

    <resultMap type="cn.com.czcb.model.FeedbackProblem" id="resultMap">
        <id property="id" column="id" />
        <result property="text" column="text" />
        <result property="typeId" column="type_id" />
        <result property="createTime" column="create_time" />
        <result property="deleteFlag" column="delete_flag" />
    </resultMap>

    <sql id="baseCol">
        id, text, type_id, create_time, delete_flag
    </sql>
	
	<sql id="pageSql">
    	<if test="__start !=null and __size!=null"><![CDATA[ limit #{__start},#{__size} ]]></if>
    </sql>
	
    <sql id="whereSql">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <if test="id != null"><![CDATA[ and id = #{id} ]]></if>
            <if test="id_enum != null">
                <![CDATA[ and id in ]]>
                <foreach collection="id_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="text != null"><![CDATA[ and text = #{text} ]]></if>
            <if test="text_enum != null">
                <![CDATA[ and text in ]]>
                <foreach collection="text_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="typeId != null"><![CDATA[ and type_id = #{typeId} ]]></if>
            <if test="typeId_enum != null">
                <![CDATA[ and type_id in ]]>
                <foreach collection="typeId_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="createTime != null"><![CDATA[ and create_time = #{createTime} ]]></if>
            <if test="createTime_r_min != null"><![CDATA[ and create_time >= #{createTime_r_min} and create_time <= #{createTime_r_max} ]]></if>
            <if test="createTime_enum != null">
                <![CDATA[ and create_time in ]]>
                <foreach collection="createTime_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="deleteFlag != null"><![CDATA[ and delete_flag = #{deleteFlag} ]]></if>
            <if test="deleteFlag_r_min != null"><![CDATA[ and delete_flag >= #{deleteFlag_r_min} and delete_flag <= #{deleteFlag_r_max} ]]></if>
            <if test="deleteFlag_enum != null">
                <![CDATA[ and delete_flag in ]]>
                <foreach collection="deleteFlag_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="_default_mulattr != null">
                <![CDATA[ and ]]>
                <foreach collection="_default_mulattr" item="item" open="(" separator=" or " close=")">
                    <if test="item.name == 'id'"><![CDATA[ id = #{item.value} ]]></if>
                    <if test="item.name == 'text'"><![CDATA[ text = #{item.value} ]]></if>
                    <if test="item.name == 'typeId'"><![CDATA[ type_id = #{item.value} ]]></if>
                </foreach>
            </if>
        </trim>
    </sql>

    <sql id="orderSql">
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="_orderBy == 'id_desc'"><![CDATA[ id desc, ]]></if>
            <if test="_orderBy == 'id_asc'"><![CDATA[ id, ]]></if>
            <if test="_orderBy == 'text_desc'"><![CDATA[ text desc, ]]></if>
            <if test="_orderBy == 'text_asc'"><![CDATA[ text, ]]></if>
            <if test="_orderBy == 'typeId_desc'"><![CDATA[ type_id desc, ]]></if>
            <if test="_orderBy == 'typeId_asc'"><![CDATA[ type_id, ]]></if>
            <if test="_orderBy == 'createTime_desc'"><![CDATA[ create_time desc, ]]></if>
            <if test="_orderBy == 'createTime_asc'"><![CDATA[ create_time, ]]></if>
            <if test="_orderBy == 'deleteFlag_desc'"><![CDATA[ delete_flag desc, ]]></if>
            <if test="_orderBy == 'deleteFlag_asc'"><![CDATA[ delete_flag, ]]></if>

			<if test="_orderBy_enum != null">
				<foreach collection="_orderBy_enum" item="orderItem" open="" separator="," close="">
					<if test="orderItem == 'id_desc'"><![CDATA[ id desc ]]></if>
					<if test="orderItem == 'id_asc'"><![CDATA[ id ]]></if>
					<if test="orderItem == 'text_desc'"><![CDATA[ text desc ]]></if>
					<if test="orderItem == 'text_asc'"><![CDATA[ text ]]></if>
					<if test="orderItem == 'typeId_desc'"><![CDATA[ type_id desc ]]></if>
					<if test="orderItem == 'typeId_asc'"><![CDATA[ type_id ]]></if>
					<if test="orderItem == 'createTime_desc'"><![CDATA[ create_time desc ]]></if>
					<if test="orderItem == 'createTime_asc'"><![CDATA[ create_time ]]></if>
					<if test="orderItem == 'deleteFlag_desc'"><![CDATA[ delete_flag desc ]]></if>
					<if test="orderItem == 'deleteFlag_asc'"><![CDATA[ delete_flag ]]></if>
					
				</foreach>
			</if>
        </trim>
    </sql>
	
	<sql id="updateSetSql">
        <trim prefix="set" prefixOverrides="and">
            <if test="text != null"><![CDATA[ and text = #{text} ]]></if>
            <if test="typeId != null"><![CDATA[ and type_id = #{typeId} ]]></if>
            <if test="createTime != null"><![CDATA[ and create_time = #{createTime} ]]></if>
            <if test="deleteFlag != null"><![CDATA[ and delete_flag = #{deleteFlag} ]]></if>
        </trim>
    </sql>	

    <insert id="insertObject" parameterType="cn.com.czcb.model.FeedbackProblem">
        insert into
        feedback_problem(id,text,type_id,create_time,delete_flag)
        values(#{id},#{text},#{typeId},#{createTime},#{deleteFlag});
    </insert>

    <update id="updateObject" parameterType="cn.com.czcb.model.FeedbackProblem">
        update feedback_problem
        set text=#{text},type_id=#{typeId},create_time=#{createTime},delete_flag=#{deleteFlag}
        where id=#{id};
    </update>
	
	<update id="updateObjectByFields" parameterType="java.util.Map">
        update feedback_problem
        <include refid="updateSetSql" />
        where id=#{id};
    </update>

    <delete id="deleteObject" parameterType="string">
        delete from feedback_problem where id=#{id};
    </delete>

    <delete id="deleteObjectByWhere" parameterType="cn.com.czcb.dao.QueryParams">
        delete from feedback_problem
        <include refid="whereSql" />
    </delete>

    <select id="getBaseObject" parameterType="string" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from feedback_problem where id=#{id};
    </select>

    <select id="getDetailObject" parameterType="string" resultMap="resultMap">
        select * from feedback_problem where id=#{id};
    </select>

    <select id="queryCount" parameterType="cn.com.czcb.dao.QueryParams" resultType="int">
        select count(*) from feedback_problem
          <include refid="whereSql" />
    </select>

    <select id="queryBaseList" parameterType="cn.com.czcb.dao.QueryParams" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from feedback_problem
            <include refid="whereSql" />
          <include refid="orderSql" />
        <include refid="pageSql" />
    </select>

    <select id="queryDetailList" parameterType="cn.com.czcb.dao.QueryParams" resultMap="resultMap">
        select * from feedback_problem
            <include refid="whereSql" />
          <include refid="orderSql" />
        <include refid="pageSql" />
    </select>
</mapper> 


